version: 2
models:
- name: core__condition
  description: >
    The core condition table contains information related to medical  conditions patients
    have, including problems, admitting diagnosis codes,  and billable diagnosis codes.
  config:
    schema: |
      {%- if var('tuva_schema_prefix',None) != None -%}{{var('tuva_schema_prefix')}}_core
      {% else %}core{%- endif -%}
    alias: condition
    tags: core
    materialized: table
  columns:
  - name: condition_id
    description: Unique identifier for each condition in the table.
    tests:
    - unique:
        config:
          severity: warn
  - name: patient_id
    description: Unique identifier for each patient in the dataset.
  - name: encounter_id
    description: Unique identifier for each encounter.
  - name: claim_id
    description: Unique identifier for each claim.
  - name: recorded_date
    description: Date when the condition was recorded.
  - name: onset_date
    description: Date when the condition first occurred.
  - name: resolved_date
    description: Date when the condition was resolved.
  - name: status
    description: Status of the condition.
  - name: condition_type
    description: The type of condition i.e. problem, admitting, or billing.
  - name: source_code_type
    description: >
      The type of condition code reported in the source system e.g.  ICD-10-CM.
    meta:
      terminology: 
        https://github.com/tuva-health/the_tuva_project/blob/main/seeds/terminology/terminology__code_type.csv
  - name: source_code
    description: >
      The condition code in the source system e.g. the ICD-10 code.
    meta:
      terminology: 
        https://github.com/tuva-health/the_tuva_project/blob/main/seeds/terminology/terminology__icd_10_cm.csv
      terminology_note: "**Note: this terminology set is too large to be loaded as
        a seed and is instead loaded from public cloud storage for supported adapters."
  - name: source_description
    description: Description of the condition code in the source system.
  - name: normalized_code_type
    description: The normalized type of condition code.
    meta:
      terminology: 
        https://github.com/tuva-health/the_tuva_project/blob/main/seeds/terminology/terminology__code_type.csv
  - name: normalized_code
    description: The normalized condition code.
    meta:
      terminology: 
        https://github.com/tuva-health/the_tuva_project/blob/main/seeds/terminology/terminology__icd_10_cm.csv
      terminology_note: "**Note: this terminology set is too large to be loaded as
        a seed and is instead loaded from public cloud storage for supported adapters."
  - name: normalized_description
    description: Normalized description of the condition code.
  - name: mapping_method
    description: mapping method used to populate the normalized codes and descriptions.  Can
      be manual (fields were populated in input layer), automatic (dictionary codes
      matching the source code were found and was automatically populated) or custom
      (populated by normalization engine)
  - name: condition_rank
    description: >
      The numerical ranking of a diagnosis code in a claim.  Principle  diagnosis
      code is given a ranking of 1. Claims data typically has a  strict ranking of
      conditions whereas medical records will often not  have this information or
      the information won't be accurate.
    data_type: integer
  - name: present_on_admit_code
    description: The present_on_admit_code related to the condition.
    meta:
      terminology: 
        https://github.com/tuva-health/the_tuva_project/blob/main/seeds/terminology/terminology__present_on_admission.csv
  - name: present_on_admit_description
    description: >
      The description of the present_on_admit_code for the condition.
  - name: data_source
    description: >
      User-configured field that indicates the data source (e.g. typically  named
      after the payer and state "BCBS Tennessee").
  - name: tuva_last_run
    description: >
      The last time the data was refreshed.  Generated by  `dbt_utils.pretty_time`
      as the local time of the `dbt run`  environment.  Timezone is configurable via
      the `tuva_last_run` var.

