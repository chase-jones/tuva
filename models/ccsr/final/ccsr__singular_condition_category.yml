version: 2
models:
- name: ccsr__singular_condition_category
  config:
    schema: |
      {%- if var('tuva_schema_prefix',None) != None -%}{{var('tuva_schema_prefix')}}_ccsr
      {% else %}ccsr{%- endif -%}
    alias: singular_condition_category
    tags:
    - ccsr
    materialized: table
  description: >
    This model contains only the CCSR's default category assignment for the  ICD-10
    code, and only for the first-listed ICD-10 code  (`diagnosis_code = 1`).
  columns:
  - name: encounter_id
    description: Unique identifier for an encounter.
  - name: claim_id
    description: Unique claim_id for each claim.
  - name: patient_id
    description: Unique identifier for each patient.
  - name: body_system
    description: >
      The body system to which each parent category belongs. The 22 body  systems
      generally follow the structure of the ICD-10-CM diagnosis  chapters. Note that
      the procedure tables don't have this column, but  a conceptually related field
      in procedure models is `clinical_domain`.
  - name: ccsr_parent_category
    description: >
      The parent category code for each CCSR category. In practice, this is  the three
      letter prefix to the category code.
  - name: parent_category_description
    description: A description of the parent category.
  - name: ccsr_category
    description: >
      A CCSR category for the ICD-10-CM code. One ICD-10-CM code may have up
      6 CCSR categories associated, ordinally ranked by the  ccsr_category_rank. Will
      be null if a record has a `code` that isn't  referenced in the CCSR seed file.
  - name: ccsr_category_description
    description: The human readable description of the `ccsr_category`.
  - name: dxccsr_version
    description: >
      The version number of the CCSR program from which the dbt model was  derived.
  - name: tuva_last_run
    description: >
      The time at with the model was materialized. Generated by  `dbt_utils.pretty_time`
      as the local time of the `dbt run` environment.   Timezone is configurable via
      the `tuva_last_run` var.


